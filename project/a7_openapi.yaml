openapi: 3.0.0
info:
  version: 1.0.0
  title: PawPals API
  description: API for the LBAW 2024/2025 project
externalDocs:
  description: Find more info here.
  url: 'https://gitlab.up.pt/lbaw/lbaw2425/lbaw24121'
tags:
  - name: 'M01: Authentication'
  - name: 'M02: Users'
  - name: 'M03: Posts'
  - name: 'M04: Comments'
  - name: 'M05: Groups'
  - name: 'M06: Search'
  - name: 'M07: Admin'
  - name: 'M08: Pictures'
  - name: 'M09: Messages'
  - name: 'M10: Bans'
  - name: 'M11: Appeals'
  - name: 'M12: Notifications'
  - name: 'M13: Static pages'
paths:
  /register:
   get:
      operationId: R101
      summary: 'R101: Register Form'
      description: 'Provide new user registration form. Access: PUB'
      tags:
       - 'M01: Authentication'
      responses:
       '200':
        description: 'Show Registration Form.'
   post:
      operationId: R102
      summary: 'R102: Register Action'
      description: 'Processes the new user registration form submission. Access: PUB'
      tags:
       - 'M01: Authentication'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                firstname:
                  type: string
                surname:
                  type: string
                password:
                  type: string
                  format: password
                confirmPassword:
                  type: string
                  format: password
                email:
                  type: string
                  format: email
                bio_description:
                  type: string
                is_public:
                  type: boolean
                type:
                  type: string
                picture:
                  type: string
                  format: binary
              required:
                - username
                - firstname
                - surname
                - password
                - confirmPassword
                - email
                - type
      responses:
        '302':
          description: 'Redirect after processing the new user information.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful registration. Redirect to homepage.'
                  value: '/home'
                302Failure:
                  description: 'Failed registration. Redirect to login form.'
                  value: '/login'
  /login:
    get:
      operationId: R103
      summary: 'R103: Login Form'
      description: 'Provide login form. Access: PUB'
      tags:
      - 'M01: Authentication'
      responses:
        '200':
          description: 'Show Login Form.'
    post:
      operationId: R104
      summary: 'R104: Login Action'
      description: 'Processes the login form submission. Access: PUB'
      tags:
      - 'M01: Authentication'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
              - email
              - password
      responses:
        '302':
          description: 'Redirect after processing the login credentials.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful login. Redirect to homepage.'
                  value: '/home'
                302Error:
                  description: 'Failed login. Redirect to login form.'
                  value: '/login'
  /logout:
    post:
      operationId: R105
      summary: 'R105: Logout Action'
      description: 'Logout the current authenticated user. Access: USR, ADM'
      tags:
      - 'M01: Authentication'
      responses:
        '302':
          description: 'Redirect after processing logout.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful logout. Redirect to homepage.'
                  value: '/home'
  /password/reset:
    post:
      operationId: R106
      summary: 'R106: Request Password Recovery Action'
      description: 'Initiates the password recovery process by sending a token via email to the user.'
      tags:
        - 'M01: Authentication'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
                - email
      responses:
          '200':
            description: 'Success. Password recovery email sent successfully.'
          '400':
            description: 'Failure. Invalid input.'
          '404':
            description: 'Failure. Email does not match any user'
          '500':
            description: 'Failure. Internal Server Error - Unable to process request.'
  /password/set:
    post:
      operationId: R107
      summary: 'R107: Password Recovery Action'
      description: 'Set a new password using the recovery token.'
      tags:
        - 'M01: Authentication'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                token:
                  type: string
                newPassword:
                  type: string
                  format: password
                confirmPassword:
                  type: string
                  format: password
              required:
                - token
                - newPassword
                - confirmPassword
      responses:
        '200':
          description: 'Success. Password updated.'
        '400':
          description: 'Failure. Invalid token or password format'
        '404':
          description: 'Failure. Token not found or expired.'
        '500':
          description: 'Failure. Internal Server Error - Unable to process request'
  /users/{username}:
    get:
      operationId: R201
      summary: 'R201: View User Profile'
      description: 'Show one individual user profile. Access: PUB, USR, ADM'
      tags:
      - 'M02: Users'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 'Success. Show User Profile.'
        '404':
          description: 'Failure. User Profile not found.'
  /user/edit:
    get:
      operationId: R202
      summary: 'R202: User Profile Edit'
      description: 'Shows the user profile edit page. Access: USR'
      tags:
        - 'M02: Users'
      responses:
        '200':
          description: 'Ok. Show edit profile.'
        '401':
          description: 'Unauthorized. You can only edit your own profile.'
          headers:
            Location:
              schema:
                type: string
              examples:
                401Success:
                  description: 'Unauthorized. Redirect to user profile.'
                  value: '/user/{username}'
    post:
      operationId: R203
      summary: 'R203: User Profile Edit Action'
      description: 'Processes and saves the changes made by user. Access: USR'
      tags:
        - 'M02: Users'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                firstname:
                  type: string
                surname:
                  type: string
                password:
                  type: string
                  format: password
                confirmPassword:
                  type: string
                  format: password
                email:
                  type: string
                  format: email
                bio_description:
                  type: string
                is_public:
                  type: boolean
                type:
                  type: string
                picture:
                  type: string
                  format: binary
              required:
                - username
                - firstname
                - surname
                - password
                - confirmPassword
                - email
                - type
      responses:
        '302':
          description: 'Ok. Redirect after processing the new user information.'
          headers:
            Location:
              schema:
                type: string
              example:
                302Success:
                  description: 'Successful update. Redirect to user profile page.'
                  value: '/user/{username}'
                302Failure:
                  description: 'Failed update. Redirect profile edit page.'
                  value: '/user/edit'
  /user/delete:
    post:
      operationId: R204
      summary: 'R204: Delete Profile'
      description: 'Delete profile. Access: USR, ADM'
      tags:
        - 'M02: Users'
      requestBody:
          required: true
          content:
            application/x-www-form-urlencoded:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                required:
                  - id
      responses:
        '302':
          description: 'Ok. Redirect after deleting user profile.'
          headers:
            Location:
              schema:
                type: string
              example:
                302Success:
                  description: 'Successful. Redirect to login page.'
        '403':
          description: 'Failure. Unauthorized action.'
  /home:
    get:
      operationId: R301
      summary: 'R301: View Homepage'
      description: 'Show homepage. Access: PUB, USR, ADM'
      tags:
        - 'M03: Posts'

      responses:
        '200':
          description: 'Ok. Show the home page.'
  /post/{post_id}:
      get:
        operationId: R302
        summary: 'R302: View Post'
        description: 'Show one post. Access: PUB, USR, OWN'
        tags:
          - 'M03: Posts'
  
        responses:
          '200':
            description: 'Ok. Show the post page.'
          '302':
            description: 'Unauthorized. Redirect after unauthorized request.'
            headers:
              Location:
                schema:
                  type: string
                example:
                    302Success:
                      description: 'You need to login or follow this profile if it is private.'
                      value: '/home'

  /post/create:

    post:
      operationId: R303
      summary: 'R303: Create Post Action'
      description: 'Create post. Access: USR'
      tags:
        - 'M03: Posts'

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                description:
                  type: string
                picture:
                  type: string
              required:
                - description
                - picture

      responses:
        '302':
          description: 'Ok. Redirect after processing the new post.'
          headers:
            Location:
              schema:
                type: string
              example:
                302Success:
                  description: 'Success. Post created. Redirect back.'
                302Failure:
                  description: 'Failed. Redirect back.'
  
  /post/{post_id}/edit:

    post:
      operationId: R304
      summary: 'R304: Edit Post Action'
      description: 'Edit post. Access: OWN'
      tags:
        - 'M03: Posts'

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                description:
                  type: string
                picture:
                  type: string
              required:
                - description
                - picture

      responses:
        '200':
          description: 'Success. Edit saved.'
        '403':
          description: 'Failure. Unauthorized action.'
  
  /post/{post_id}/delete:

    post:
      operationId: R305
      summary: 'R305: Delete Post Action'
      description: 'Delete post. Access: OWN, ADM'
      tags:
        - 'M03: Posts'

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                post_id:
                  type: integer
              required:
                  - post_id

      responses:
        '200':
          description: 'Redirect after deleting post.'
        '403':
          description: 'Failure. Unauthorized action.'

  /bans:
    post:
      operationId: R1001
      summary: 'R1001: Create a new ban for a user'
      description: Blocks a user by creating a new ban entry.
      tags:
        - 'M10: Bans'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Id of the user to ban
              required:
                - id
      responses:
        '200':
          description: User successfully blocked.
        '403':
          description: Unauthorized. You do not have permission to perform this action.
  '/bans/{id}':
    get:
      operationId: R1002
      summary: 'R1002: Retrieve all bans for a user'
      description: Fetch all ban records associated with a user by id.
      tags:
        - 'M10: Bans'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Id of the user
      responses:
        '200':
          description: Successfully retrieved user bans.
        '403':
          description: Unauthorized. You do not have permission to access this resource.
    delete:
      operationId: R1003
      summary: 'R1003: Delete a specific ban'
      description: Removes a ban for a user by specifying the ban id.
      tags:
        - 'M10: Bans'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Id of the ban to delete
      responses:
        '200':
          description: Ban successfully deleted.
        '403':
          description: Unauthorized. You do not have permission to delete this ban.
        '404':
          description: Ban not found. The specified ban id does not exist.
  /bans/unblock:
    put:
      operationId: R1004
      summary: 'R1004: Unblock a user'
      description: Updates a ban to set it as inactive
      tags:
        - 'M10: Bans'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Id of the user to unblock
              required:
                - id
      responses:
        '200':
          description: User successfully unblocked.
        '403':
          description: Unauthorized. You do not have permission to perform this action.
  /bans/reason:
    put:
      operationId: R1005
      summary: 'R1005: Update ban reason'
      description: Modifies the reason for an existing ban.
      tags:
        - 'M10: Bans'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Id of the ban to update
                reason:
                  type: string
                  description: New reason for the ban
              required:
                - id
                - reason
      responses:
        '200':
          description: Ban reason successfully updated.
        '403':
          description: Unauthorized. You do not have permission to perform this action.
  /appeals:
    post:
      operationId: R1101
      summary: 'R1101: Create an appeal for a ban'
      description: Submits a new appeal for a ban.
      tags:
        - 'M11: Appeals'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ban_id:
                  type: integer
                  description: Id of the ban to appeal
                reason:
                  type: string
                  description: Description of the appeal
                date:
                  type: string
                  format: date
                  description: Date of the appeal
              required:
                - ban_id
                - reason
                - date
      responses:
        '200':
          description: Appeal successfully created.
        '403':
          description: Unauthorized. You do not have permission to perform this action.
  '/appeals/{ban_id}':
    get:
      operationId: R1102
      summary: 'R1102: Get all appeals for a ban'
      description: Returns all appeals associated with a specific ban id.
      tags:
        - 'M11: Appeals'
      parameters:
        - in: path
          name: ban_id
          schema:
            type: integer
          required: true
          description: Id of the ban
      responses:
        '200':
          description: Successfully retrieved appeals.
        '403':
          description: Unauthorized. You do not have permission to access this resource.
  '/appeals/{id}/status':
    put:
      operationId: R1103
      summary: 'R1103: Update the status of an appeal'
      description: Changes the status of an existing appeal.
      tags:
        - 'M11: Appeals'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: New status of the appeal
              required:
                - status
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Id of the appeal to update
      responses:
        '200':
          description: Appeal status successfully updated.
        '403':
          description: Unauthorized. You do not have permission to perform this action.
  '/appeals/{id}/description':
    put:
      operationId: R1104
      summary: 'R1104: Update the description of an appeal'
      description: Modifies the description of an existing appeal.
      tags:
        - 'M11: Appeals'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: New description of the appeal
              required:
                - description
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Id of the appeal to update
      responses:
        '200':
          description: Appeal description successfully updated.
        '403':
          description: Unauthorized. You do not have permission to perform this action.
  '/appeals/{id}':
    delete:
      operationId: R1105
      summary: 'R1105: Delete an appeal'
      description: Removes an appeal by specifying the appeal id.
      tags:
        - 'M11: Appeals'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Id of the appeal to delete
      responses:
        '200':
          description: Appeal successfully deleted.
        '403':
          description: Unauthorized. You do not have permission to delete this appeal.
        '404':
          description: Appeal not found. The specified appeal id does not exist.
  /notifications:
    post:
      operationId: R1201
      summary: 'R1201: Create a notification'
      description: Creates a new notification for a user.
      tags:
        - 'M12: Notifications'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: Id of the user to notify
                message:
                  type: string
                  description: Notification message
              required:
                - userId
                - message
      responses:
        '200':
          description: Notification successfully created.
        '403':
          description: Unauthorized. You do not have permission to perform this action.
  '/notifications/{id}':
    put:
      operationId: R1202
      summary: 'R1202: Update a notification'
      description: Updates an existing notification.
      tags:
        - 'M12: Notifications'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: New notification message
              required:
                - message
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Id of the notification to update
      responses:
        '200':
          description: Notification successfully updated.
        '403':
          description: Unauthorized. You do not have permission to perform this action.
  '/notifications/id':
    delete:
      operationId: R1203
      summary: 'R1203: Delete a notification'
      description: Deletes a notification by specifying the notification id.
      tags:
        - 'M12: Notifications'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Id of the notification to delete
      responses:
        '200':
          description: Notification successfully deleted.
        '403':
          description: Unauthorized. You do not have permission to delete this notification.
        '404':
          description: Notification not found. The specified notification id does not exist.
  '/notifications/user/{userId}':
    get:
      operationId: R1204
      summary: 'R1204: Get notifications for a user'
      description: Retrieves all notifications for a specific user, optionally filtered.
      tags:
        - 'M12: Notifications'
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
          description: Id of the user
        - in: query
          name: filter
          schema:
            type: string
          description: Optional filter for notifications
      responses:
        '200':
          description: Successfully retrieved notifications.
        '403':
          description: Unauthorized. You do not have permission to access this resource.